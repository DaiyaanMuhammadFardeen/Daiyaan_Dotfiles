"run this command for vundle
"git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim


" run this for vimplug. But add a space after the [-flo] line 5. If it doesn't
" work, there is google
"sh -c 'curl -fLo"${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'


set nocompatible              " be iMproved, required
filetype off                 " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'frazrepo/vim-rainbow'
Plugin 'codota/tabnine-vim'
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
call plug#begin('~/.vim/plugged')
Plug 'norcalli/nvim-colorizer.lua'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'psliwka/vim-smoothie'
Plug 'ryanoasis/vim-devicons'
call plug#end()
" use <tab> for trigger completion and navigate to the next complete item 
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
endfunction

inoremap <silent><expr> <Tab>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<Tab>" :
      \ coc#refresh()

inoremap <leader><space> <Esc>

set mouse=a 
set number
set relativenumber
set shell=/bin/zsh
set clipboard+=unnamedplus
colorscheme gruvbox
let g:airline_theme='gruvbox'
nmap <M-e> :CocCommand explorer<CR>
nnoremap <C-j> :bprev<CR>
nnoremap <C-k> :bnext<CR>
set tw=0
set ts=4
set sw=4
set termguicolors
set autoindent
set hlsearch
set incsearch

set ignorecase
set smartcase
set smartindent
set lazyredraw
set encoding=utf-8
set linebreak
set laststatus=2
set ruler
set wildmenu
set autoread
set confirm
set history=1000
set noswapfile
set nowrap
syntax enable
inoremap <M-l> <right>
nmap <C-c> 	                    :ColorizerToggle<CR>
noremap <silent> <C-S>          :update<CR>
vnoremap <silent> <C-S>         <C-C>:update<CR>
inoremap <silent> <C-S>         <C-O>:update<CR>

noremap <silent> <M-q>          :bdelete<CR>
vnoremap <silent> <M-q>         <C-C>:bdelete<CR>
inoremap <silent> <M-q>         <C-O>:bdelete<CR>

noremap <silent> <C-q>          :quit<CR>
vnoremap <silent> <C-q>         <C-C>:quit<CR>
inoremap <silent> <C-q>         <C-O>:quit<CR>
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

"Airline Stuff
let g:airline#extensions#tabline#left_sep = '┃ '
let g:airline#extensions#tabline#left_alt_sep = ' ┃'
let g:airline_theme='base16_gruvbox_dark_hard'
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline_powerline_fonts = 1
let g:airline_detect_paste=1
let g:airline#extensions#bufferline#enabled = 1
let g:airline#extensions#capslock#enabled = 1
let g:airline#extensions#coc#enabled = 1
let g:airline#extensions#unicode#enabled = 1




if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif

  let g:airline_extensions = ['branch', 'coc', 'ctrlspace', 'cursormode', 'fzf', 'hunks', 'keymap', 'languageclient', 'netrw', 'po', 'poetv', 'tabline', 'term', 'vimcmake', 'vimtex', 'virtualenv', 'wordcount', 'whitespace']

let g:rainbow_active = 1
set completeopt-=preview
